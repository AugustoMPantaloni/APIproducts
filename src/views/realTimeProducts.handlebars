<ul class="product-list">
    {{#each products}}
        <li class="product-item">
            <h3>{{this.title}}</h3>
            <p><strong>Categoría:</strong> {{this.category}}</p>
            <p><strong>Descripción:</strong> {{this.description}}</p>
            <p><strong>Precio:</strong> ${{this.price}}</p>
            <p><strong>Stock:</strong> {{this.stock}}</p>
            <p><strong>Fotos:</strong></p>
            <ul class="thumbnail-list">
                {{#each this.thumbnails}}
                    <li><img src="/images/{{this}}" alt="thumbnail" class="thumbnail-img"></li>
                {{/each}}
            </ul>
            <button data-id="{{this.id}}" class="button-delete">Eliminar</button>
        </li>
    {{/each}}
</ul>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    socket.on('connect', () => {
        console.log('Conectado al servidor de Socket.IO');
    });

    socket.on('getAllProducts', (products) => {
        const productList = document.querySelector('.product-list');
        productList.innerHTML = ''; 

        products.forEach(product => {
            const productItem = document.createElement('li');
            productItem.classList.add('product-item');
            productItem.innerHTML = `
                <h3>${product.title}</h3>
                <p><strong>Categoría:</strong> ${product.category}</p>
                <p><strong>Descripción:</strong> ${product.description}</p>
                <p><strong>Precio:</strong> $${product.price}</p>
                <p><strong>Stock:</strong> ${product.stock}</p>
                <p><strong>Fotos:</strong></p>
                <ul class="thumbnail-list">
                    ${product.thumbnails.map(thumbnail => 
                        `<li><img src="/images/${thumbnail}" alt="thumbnail" class="thumbnail-img"></li>`
                    ).join('')}
                </ul>
                <button data-id="${product.id}" class="button-delete">Eliminar</button>
            `;
            productList.appendChild(productItem);
        });
    });

    document.querySelector('.product-list').addEventListener('click', async (event) => {
        if (event.target.classList.contains('button-delete')) {
            const productId = event.target.dataset.id;
            try {
                const response = await fetch(`/realtimeproducts/${productId}`, {
                    method: 'DELETE',
                });
                if (!response.ok){
                throw new Error('Error al eliminar')};
                
                console.log('Producto eliminado');
                socket.emit('requestUpdate'); 
            } catch (error) {
                console.error('Error:', error.message);
            }
        }
    });
</script>