<link rel="stylesheet" href="/css/styleProductsHandlebars.css"> 

<h1 class="title-main">Bienvenido a la API de Ecommerce</h1>
<div class="container-links">
    <a href="/realtimeproducts" class="realtime-link">Gestiona tus productos en tiempo real</a>
    <a id="cartLink" href="#" class="realtime-link">Carrito de compras</a>
</div>
<p class="textCart">Prueba con agreagar productos al carrito de compras</p>
<h2 class="title-sub">Lista de productos</h2>

{{#if products.length}}
    <ul class="product-list">
        {{#each products}}
            <li class="product-item">
                <h3>{{this.title}}</h3>
                <p><strong>Categoría:</strong> {{this.category}}</p>
                <p><strong>Descripción:</strong> {{this.description}}</p>
                <p><strong>Precio:</strong> ${{this.price}}</p>
                <p><strong>Stock:</strong> {{this.stock}}</p>
                <p><strong>Fotos:</strong></p>
                <ul class="thumbnail-list">
                    {{#each this.thumbnails}}
                        <li><img src="/images/{{this}}" alt="thumbnail" class="thumbnail-img"></li>
                    {{/each}}
                </ul>
                <div class="container-buttons">
                    <a href="/products/{{this._id}}" data-id="{{this._id}}" class="button-details">Detalles</a>
                    <button onclick="addToCart(event)" data-id="{{this._id}}" class="button-add">Agegar al carrito</button>
                </div>
            </li>
        {{/each}}
    </ul>
    <div class="paginacion">
        {{#if pagination.hasPrevPage}}
            <a href="/?page={{pagination.prevPage}}"> ⏪ Anterior</a>
        {{/if}}
        <p>
            Página {{pagination.currentPage}} de {{pagination.totalPages}}
        </p>
        {{#if pagination.hasNextPage}}
            <a href="/?page={{pagination.nextPage}}">Siguiente ⏩ </a>
        {{/if}}
    </div>
    {{else}}
    <h3 class="no-products">No existen productos</h3>
{{/if}}
<script>
    //Funcion para crear el carro de compras
    async function createCart() {
        let cartId = sessionStorage.getItem("cartId");

        if (cartId) {
            document.getElementById("cartLink").href =`/carts/${cartId}`;
            return;
        }

        try {
            const response = await fetch("/api/carts", { method: 'POST' });

            if (!response.ok) {
                throw new Error("Error en la creación del carrito de compras");
            }

            const data = await response.json();

            const cartId = data.cartId; 

            document.getElementById("cartLink").href =`/carts/${cartId}`;

            sessionStorage.setItem("cartId", cartId);
            
            alert(`Se ha creado un carrito de compras con ID: ${cartId}. Este durará lo que dure su sesión.`);
        } catch (error) {
            console.error('Error:', error.message);
            alert('Error en la creación del carrito de compras');
        }
    }
    createCart();

    async function addToCart(event){
        try{
            const cartId = sessionStorage.getItem("cartId");
            const productId = event.target.getAttribute("data-id");

            const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {method:"POST"})
            if(!response.ok){
                throw new Error("No se pudo agregar el producto al carrito")
            }

            alert("Se agrego el producto al carrito de compras")
        }catch(error){
            console.error('Error:', error.message);
            alert("No se pudo agregar el producto al carrito");
        }
    }

</script>
